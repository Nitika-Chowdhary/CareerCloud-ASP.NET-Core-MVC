@model PaginatedList<CareerCloud.Pocos.SecurityLoginPoco>

<h1>List of Applicants</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="currentFilter" value="@ViewData["Filter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["Filter"]">Full Name</a>
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Login)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.Password)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Created)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PasswordUpdate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AgreementAccepted)
                </th>*@
            <th>
                IsLocked
            </th>
            <th>
                IsInactive
            </th>
            <th>
                Email Address
            </th>
            <th>
                Phone Number
            </th>

            @*<th>
                    @Html.DisplayNameFor(model => model.ForceChangePassword)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrefferredLanguage)
                </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Login)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.Password)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.PasswordUpdate)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.AgreementAccepted)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.IsLocked)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsInactive)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>

                @*<td>
                        @Html.DisplayFor(modelItem => item.ForceChangePassword)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PrefferredLanguage)
                    </td>*@
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                    <a asp-controller="ApplicantProfiles" asp-action="Index" asp-route-login="@item.Id">Profile</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentOrder"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["Filter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentOrder"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["Filter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>